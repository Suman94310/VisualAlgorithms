{"version":3,"sources":["routes/Sorting.js","routes/Home.js","routes/Searching.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Sorting","generateRandomList","list","listSize","document","getElementById","value","i","push","Math","floor","random","setState","bars","getElementsByClassName","length","style","background","createBars","state","height","className","id","width","scrollWidth","transform","animations","insertionSort","List","Object","assign","list_size","j","temp","animate","console","log","setTimeout","this","class","selected","for","type","onClick","React","Component","Home","fix_homeContainer_height","Searching","renderList","lineHeight","handleKeyChange","key","linear_search","animate_linear_search","borderColor","placeholder","aria-label","aria-describedby","onChange","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","role","aria-haspopup","aria-labelledby","tabindex","aria-disabled","App","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a969d18.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../static/styles/Sorting.css\"\r\n\r\n\r\nexport default class Sorting extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            list : [],\r\n            listSize : 0,\r\n            animations : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.generateRandomList()\r\n    }\r\n\r\n    generateRandomList = () =>{\r\n        let list = []\r\n        let listSize = document.getElementById(\"formControlRange\").value\r\n        for(let i = 0; i < listSize; i++){\r\n            list.push(Math.floor(Math.random() * listSize))\r\n        }\r\n        this.setState({\r\n            list : list,\r\n            listSize : listSize\r\n        })\r\n        let bars = document.getElementsByClassName(\"bar\")\r\n        for (let i =0; i<bars.length; i++){\r\n            bars[i].style.background = \"#8c8c8c\"\r\n        }\r\n    }\r\n\r\n    createBars = () =>{\r\n        let bars = []\r\n        for(let i = 0; i < this.state.listSize; i++){\r\n            let height = this.state.list[i] \r\n            bars.push(\r\n                <div className=\"bar\" id = {i} style = {{height: height*450/(this.state.listSize), width:(document.getElementById(\"barContainer\").scrollWidth/(this.state.listSize))-2, transform:\"translate(0,\"+(450-(height*450/(this.state.listSize)))+\"px)\"}}>\r\n                </div>\r\n            )\r\n        }\r\n        return(bars)\r\n    }\r\n\r\n    animations = []\r\n\r\n    insertionSort = ()=>{\r\n        var List = Object.assign([], this.state.list)\r\n        let list_size = this.state.listSize\r\n        let animations = []\r\n        for (let i=1; i < list_size; i++){\r\n            let j = i - 1\r\n            let temp = List[i]\r\n            while(temp < List[j] && j > -1){\r\n                animations.push([j,j+1])\r\n                List[j+1] = List[j]\r\n                j--\r\n            }\r\n            List[j+1] = temp\r\n        }\r\n        this.animations = animations\r\n        this.animate()\r\n    }\r\n\r\n    animate = () =>{\r\n        let animations = this.animations\r\n        console.log(animations)\r\n        let list = Object.assign([], this.state.list)\r\n        console.log(list)\r\n        for(let i=0; i < animations.length; i++){\r\n            setTimeout(()=>{\r\n                console.log(list[animations[i][0]]+ \" \"+ list[animations[i][1]])\r\n                if(i>0){\r\n                    if(animations[i-1][1]>2){\r\n                        document.getElementById(animations[i-1][1]-2).style.background = \"#8c8c8c\"\r\n                    }\r\n                    document.getElementById(animations[i-1][0]).style.background = \"#8c8c8c\"\r\n                }\r\n                let temp = list[animations[i][0]]\r\n                document.getElementById(animations[i][0]).style.background = \"#bcb6ff\"\r\n                if(animations[i][1]>2){\r\n                    document.getElementById(animations[i][1]-2).style.background = \"#a9fff7\"\r\n                }\r\n                list[animations[i][0]] = list[animations[i][1]]\r\n                list[animations[i][1]] = temp\r\n                this.setState({list:list})\r\n                if(i == animations.length -1 ){\r\n                    let bars = document.getElementsByClassName(\"bar\")\r\n                    for (let i =0; i<bars.length; i++){\r\n                        bars[i].style.background = \"#94fbab\"\r\n                    }\r\n                }\r\n            },i*100)\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div class=\"form-group col-md-2 center\">\r\n                        <select id=\"inputState\" class=\"form-control\">\r\n                            <option selected>Insertion Sort</option>\r\n                            <option>Selection Sort</option>\r\n                            <option>Bubble Sort</option>\r\n                            <option>Merge Sort</option>\r\n                            <option>Quick Sort</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col center range-label\">\r\n                        <label for=\"formControlRange\">List size</label>\r\n                    </div>\r\n                    <div class=\"form-group col-5 center\">\r\n                        <input type=\"range\" class=\"form-control-range\" id=\"formControlRange\"/>\r\n                    </div>\r\n                    <div className=\"col center\">\r\n                        <button type=\"button\" class=\"btn btn-dark\" onClick = {()=>{this.generateRandomList()}}>Generate List</button>\r\n                    </div>\r\n                    <div className=\"col center\">\r\n                        <button type=\"button\" class=\"btn btn-success\" onClick = {()=>this.insertionSort()}>Sort</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"barContainer\">\r\n                    {this.createBars()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"../static/styles/Home.css\"\r\n\r\nexport default class Home extends React.Component{\r\n\r\n    fix_homeContainer_height = ()=>{\r\n        let homeContainer = document.getElementsByClassName(\"homeContainer\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"homeContainer\">\r\n                {/* insert some data */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"../static/styles/Searching.css\"\r\n\r\nexport default class Searching extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            list : [],\r\n            listSize : 0,\r\n            animations : [],\r\n            key : 0\r\n        }\r\n    }\r\n\r\n    generateRandomList = () =>{\r\n        let list = []\r\n        let listSize = Math.floor(document.getElementById(\"formControlRange\").value/3)-1\r\n        for (let i = 0; i < listSize; i++){\r\n            list.push(Math.floor(Math.random() * listSize))\r\n        }\r\n        this.setState(\r\n            {\r\n                list:list,\r\n                listSize:listSize\r\n            }\r\n        )\r\n    }\r\n\r\n    renderList = () =>{\r\n        let List = []\r\n        for(let i = 0; i < this.state.listSize; i++){\r\n            List.push(\r\n                <div id = {i} className = \"listItem\" style = {\r\n                        {\r\n                            height : Math.floor(document.getElementById(\"ListContainer\").scrollWidth/(this.state.listSize))-2,\r\n                            width : (Math.floor(document.getElementById(\"ListContainer\").scrollWidth/(this.state.listSize))-2),\r\n                            lineHeight : (document.getElementById(\"ListContainer\").scrollWidth/(8*this.state.listSize))/2\r\n                        }\r\n                    }\r\n                    >{this.state.list[i]}</div>\r\n            )\r\n        }\r\n        return(List)\r\n    }\r\n\r\n    handleKeyChange = () =>{\r\n        let key = document.getElementById(\"key-form\").value\r\n        this.setState({key:key})\r\n    }\r\n\r\n    // animations\r\n    animations = []\r\n    \r\n    // linear search\r\n    linear_search = () =>{\r\n        this.animations = []\r\n        let i = 0\r\n        do {\r\n            console.log(i, this.state.listSize)\r\n            i = i + 1\r\n            this.animations.push(i)\r\n        } while (this.state.key != this.state.list[i] && i < this.state.listSize-1)\r\n        this.animate_linear_search()\r\n    }\r\n    \r\n    // animate linear search\r\n    animate_linear_search = ()=>{\r\n        for(let i = 0; i < this.animations.length + 1; i++){\r\n            setTimeout(()=>{\r\n                let current_item = document.getElementById(i)\r\n                current_item.style.borderColor = \"blue\"\r\n                if(i > 0){\r\n                    let previous_item = document.getElementById(i-1)\r\n                    previous_item.style.borderColor = \"red\"\r\n                }\r\n            },300*i)\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div class=\"form-group col-md-2 center\">\r\n                        <select id=\"inputState\" class=\"form-control\">\r\n                            <option selected>Linear Search</option>\r\n                            <option>Selection Sort</option>\r\n                            <option>Bubble Sort</option>\r\n                            <option>Merge Sort</option>\r\n                            <option>Quick Sort</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col center range-label\">\r\n                        <label for=\"formControlRange\">List size</label>\r\n                    </div>\r\n                    <div class=\"form-group col-2 center\">\r\n                        <input type=\"range\" class=\"form-control-range\" id=\"formControlRange\"/>\r\n                    </div>\r\n                    <div class=\"input-group flex-nowrap col-2\">\r\n                        <input type=\"text\" class=\"form-control\" id=\"key-form\" placeholder=\"Key\" aria-label=\"Key\" aria-describedby=\"addon-wrapping\" onChange = {()=>this.handleKeyChange()}/>\r\n                    </div>\r\n                    <div className=\"col center\">\r\n                        <button type=\"button\" class=\"btn btn-dark\" onClick = {()=>{this.generateRandomList()}}>Generate List</button>\r\n                    </div>\r\n                    <div className=\"col center\">\r\n                        <button type=\"button\" class=\"btn btn-success\" onClick = {()=>this.linear_search()}>Sort</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"key vertical-center\">{this.state.key}</div>\r\n                </div>\r\n\r\n                <div className=\"row\" id = \"ListContainer\">\r\n                    {this.renderList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport default class Navbar extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Visualisers\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"/sorting-visualiser\">Sorting</a>\r\n                        <a className=\"dropdown-item\" href=\"/searching-visualiser\">Searching</a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                    </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {HashRouter, BrowserRouter, Route} from 'react-router-dom'\n\n// material ui imports\n\n// importing routes\nimport Sorting from \"./routes/Sorting\"\nimport Home from \"./routes/Home\"\nimport Searching from \"./routes/Searching\"\n\n// importing components\nimport Navbar from \"./components/Navbar\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navbar/>\n        <HashRouter basename=\"/\">\n          <Route exact path = \"/\" render = {() =><Home/>}/>\n          <Route exact path = \"/home\" render = {() =><Home/>}/>\n          <Route path=\"/sorting-visualiser\" render = {() =><Sorting/>}/>\n          <Route path = \"/searching-visualiser\" render = {()=><Searching/>}/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}